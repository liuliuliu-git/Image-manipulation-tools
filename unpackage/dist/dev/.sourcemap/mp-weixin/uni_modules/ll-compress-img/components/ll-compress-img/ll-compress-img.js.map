{"version":3,"sources":["webpack:///C:/Users/dell/Desktop/做的所有/ms_stu_pro_lrb/uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.vue?931a","webpack:///C:/Users/dell/Desktop/做的所有/ms_stu_pro_lrb/uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.vue?621f","webpack:///C:/Users/dell/Desktop/做的所有/ms_stu_pro_lrb/uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.vue?fa63","webpack:///C:/Users/dell/Desktop/做的所有/ms_stu_pro_lrb/uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.vue?f779","uni-app:///uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.vue"],"names":["data","style","Canvas","type","num","count","methods","process_img","uni","src","success","height","setTimeout","ctx","width","destWidth","destHeight","canvasId","fileType","quality","console","resolve","fail","reject","multiple_format_img","list","List","compress_img","multiple_compress_img","compress","filePath"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4H;AAC5H;AACmE;AACL;;;AAG9D;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,qFAAM;AACR,EAAE,0FAAM;AACR,EAAE,mGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,8FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAymB,CAAgB,moBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCU7nB;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MAAA;MAAA;MAAA;MAAA;MACA;QACA;QACA;QACA;QACAC;UACAC;UACAC;YACA;YACA;YACA,qCACAC;YACAC;cACA;cACAC;cACAA;cACAA;gBACAL;kBACAM;kBACAH;kBACAI;kBACAC;kBACAC;kBACAC;kBACAC;kBACAT;oBAuBAU;oBACAC;kBACA;kBACAC;oBACAF;oBACAG;kBACA;gBACA;cACA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MAAA;MAAA;MAAA;MACA;QACA;QACA;QACA;QAAA,2CACAC;UAAA;QAAA;UAAA;YAAA;YACA;cACAC;cACArB;cACA;gBACAgB;cACA;YACA;cACAE;YACA;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;MACA;IACA;IACA;IACAI;MAAA;MAAA;MAAA;MAAA;MACA;QACA;QACA;UACAlB;UACA;YACAW;YACAC;UACA;YACAE;UACA;QACA;MACA;IACA;IACA;IACAK;MAAA;MAAA;MAAA;MAAA;MACA;QACA;QACA;QACA;QAAA,4CACAH;UAAA;QAAA;UAAA;YAAA;YACA;cACAC;cACArB;cACA;gBACAgB;cACA;YACA;cACAE;YACA;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;MACA;IACA;IACAM;MAAA;MAAA;MAAA;MAAA;MACA;QACArB;UACAsB;UACApB;YACA;YACAU;YACA;cAEA;gBACAX;gBACA;kBACAY;gBACA;kBACAE;gBACA;cACA;gBACAA;cACA;YAuCA;cACAF;YACA;UACA;QACA;MACA;IACA;EACA;AACA;AAAA,2B","file":"uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./ll-compress-img.vue?vue&type=template&id=2b4077de&\"\nvar renderjs\nimport script from \"./ll-compress-img.vue?vue&type=script&lang=js&\"\nexport * from \"./ll-compress-img.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/ll-compress-img/components/ll-compress-img/ll-compress-img.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./ll-compress-img.vue?vue&type=template&id=2b4077de&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./ll-compress-img.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./ll-compress-img.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view>\r\n\t\t<view v-for=\"(item,index) in num\" :key=\"index\">\r\n\t\t\t<canvas :canvas-id=\"Canvas+index\" :style=\"style\"\r\n\t\t\t\tstyle=\"visibility: hidden; position: relative;left: -1000rpx;\"></canvas>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tstyle: null,\r\n\t\t\t\tCanvas: 'll_canvas_img',\r\n\t\t\t\ttype: null,\r\n\t\t\t\tnum: 0,\r\n\t\t\t\tcount: -1\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t//格式转换\r\n\t\t\tprocess_img(src, quality = 0.9, type = 'jpg', ratio = 1) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.count++;\r\n\t\t\t\t\tthis.num++;\r\n\t\t\t\t\tlet Canvas = this.Canvas + this.count;\r\n\t\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\t\tsrc: src,\r\n\t\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t\tlet width = res.width;\r\n\t\t\t\t\t\t\tlet height = res.height;\r\n\t\t\t\t\t\t\tthis.style =\r\n\t\t\t\t\t\t\t\t`margin-top: -${height}px; margin-left: -${width}px; width: ${width}px; height: ${height}px;`;\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tconst ctx = uni.createCanvasContext(Canvas, this);\r\n\t\t\t\t\t\t\t\tctx.clearRect(0, 0, width, height)\r\n\t\t\t\t\t\t\t\tctx.drawImage(src, 0, 0, width, height);\r\n\t\t\t\t\t\t\t\tctx.draw(false, () => {\r\n\t\t\t\t\t\t\t\t\tuni.canvasToTempFilePath({\r\n\t\t\t\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\t\t\t\theight: height,\r\n\t\t\t\t\t\t\t\t\t\tdestWidth: width * ratio,\r\n\t\t\t\t\t\t\t\t\t\tdestHeight: height * ratio,\r\n\t\t\t\t\t\t\t\t\t\tcanvasId: Canvas,\r\n\t\t\t\t\t\t\t\t\t\tfileType: type,\r\n\t\t\t\t\t\t\t\t\t\tquality: quality,\r\n\t\t\t\t\t\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t\t\t\t\t\t// #ifdef H5 \r\n\t\t\t\t\t\t\t\t\t\t\t// 在H5平台下，tempFilePath 为 base64\r\n\t\t\t\t\t\t\t\t\t\t\tlet base = res.tempFilePath;\r\n\t\t\t\t\t\t\t\t\t\t\tlet arr = base.split(','),\r\n\t\t\t\t\t\t\t\t\t\t\t\tmime = arr[0].match(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/:(.*?);/)[1],\r\n\t\t\t\t\t\t\t\t\t\t\t\tbstr = atob(arr[1]),\r\n\t\t\t\t\t\t\t\t\t\t\t\tn = bstr.length,\r\n\t\t\t\t\t\t\t\t\t\t\t\tu8arr = new Uint8Array(n);\r\n\t\t\t\t\t\t\t\t\t\t\twhile (n--) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tu8arr[n] = bstr.charCodeAt(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tn);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlet blob = new Blob([u8arr], {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: mime\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tlet blobUrl = URL\r\n\t\t\t\t\t\t\t\t\t\t\t\t.createObjectURL(blob);\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"格式转换成功\");\r\n\t\t\t\t\t\t\t\t\t\t\tresolve(blobUrl);\r\n\t\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"格式转换成功\");\r\n\t\t\t\t\t\t\t\t\t\t\tresolve(res.tempFilePath);\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"格式转换失败\");\r\n\t\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//多张格式转换\r\n\t\t\tmultiple_format_img(list, quality = 1, type = 'jpg', ratio = 1) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tlet List = [];\r\n\t\t\t\t\tlet count = 0;\r\n\t\t\t\t\tlet num = list.length;\r\n\t\t\t\t\tfor (let src of list) {\r\n\t\t\t\t\t\tthis.process_img(src, quality, type).then(res => {\r\n\t\t\t\t\t\t\tList.push(res);\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t\tif (count == num) {\r\n\t\t\t\t\t\t\t\tresolve(List);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//图片压缩\r\n\t\t\tcompress_img(src, size = 500, type = 'jpg', ratio = 0.9) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.type = type;\r\n\t\t\t\t\tthis.process_img(src, 0.9, type).then(res => {\r\n\t\t\t\t\t\tsrc = res;\r\n\t\t\t\t\t\tthis.compress(src, size, type).then(res => {\r\n\t\t\t\t\t\t\tconsole.log('压缩成功', res); // 输出压缩后的图片路径\r\n\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//多张图片压缩\r\n\t\t\tmultiple_compress_img(list, size = 500, type = 'jpg', ratio = 0.9) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tlet List = [];\r\n\t\t\t\t\tlet count = 0;\r\n\t\t\t\t\tlet num = list.length;\r\n\t\t\t\t\tfor (let src of list) {\r\n\t\t\t\t\t\tthis.compress_img(src, size, type).then(res => {\r\n\t\t\t\t\t\t\tList.push(res);\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t\tif (count == num) {\r\n\t\t\t\t\t\t\t\tresolve(List);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tcompress(src, size = 500, type, ratio = 0.9) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tuni.getFileInfo({\r\n\t\t\t\t\t\tfilePath: src,\r\n\t\t\t\t\t\tsuccess: (fileInfoRes) => {\r\n\t\t\t\t\t\t\tlet fileSize = fileInfoRes.size / 1024; // 转换为KB \t\r\n\t\t\t\t\t\t\tconsole.log('图片大小', fileSize);\r\n\t\t\t\t\t\t\tif (fileSize > size) {\r\n\t\t\t\t\t\t\t\t// #ifndef H5\r\n\t\t\t\t\t\t\t\tthis.process_img(src, 0.9, type, ratio).then(res => {\r\n\t\t\t\t\t\t\t\t\tsrc = res;\r\n\t\t\t\t\t\t\t\t\tthis.compress(src, size).then(res => {\r\n\t\t\t\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\t\t\t// #ifdef H5\r\n\t\t\t\t\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\t\t\t\t\tsrc: src,\r\n\t\t\t\t\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t\t\t\t\t//console.log('压缩前信息', res);\r\n\t\t\t\t\t\t\t\t\t\tlet canvasWidth = res.width; // 图片原始宽度\r\n\t\t\t\t\t\t\t\t\t\tlet canvasHeight = res.height; // 图片原始高度\r\n\t\t\t\t\t\t\t\t\t\t//console.log('宽度-',canvasWidth,'高度-',canvasHeight);\r\n\t\t\t\t\t\t\t\t\t\tlet img = new Image();\r\n\t\t\t\t\t\t\t\t\t\timg.src = res.path;\r\n\t\t\t\t\t\t\t\t\t\tlet canvas = document.createElement('canvas');\r\n\t\t\t\t\t\t\t\t\t\tlet ctx = canvas.getContext('2d');\r\n\t\t\t\t\t\t\t\t\t\t// 这里根据要求限制图片宽高\r\n\t\t\t\t\t\t\t\t\t\tcanvas.width = canvasWidth * ratio;\r\n\t\t\t\t\t\t\t\t\t\tcanvas.height = canvasHeight * ratio;\r\n\t\t\t\t\t\t\t\t\t\t//console.log('压缩尺寸',canvas.width,canvas.height)\r\n\t\t\t\t\t\t\t\t\t\tctx.drawImage(img, 0, 0, canvas.width, canvas\r\n\t\t\t\t\t\t\t\t\t\t\t.height);\r\n\t\t\t\t\t\t\t\t\t\t//toBlob()方法创造Blob对象，用以展示canvas上的图片\r\n\t\t\t\t\t\t\t\t\t\tlet type_h5;\r\n\t\t\t\t\t\t\t\t\t\tif (this.type == 'jpg') type_h5 = 'image/jpeg';\r\n\t\t\t\t\t\t\t\t\t\telse if (this.type == 'png') type_h5 = 'image/png';\r\n\t\t\t\t\t\t\t\t\t\telse if (this.type == 'webp') type_h5 =\r\n\t\t\t\t\t\t\t\t\t\t\t'image/webp';\r\n\t\t\t\t\t\t\t\t\t\tcanvas.toBlob((fileSrc) => {\r\n\t\t\t\t\t\t\t\t\t\t\tlet imgSrc = window.URL\r\n\t\t\t\t\t\t\t\t\t\t\t\t.createObjectURL(fileSrc);\r\n\t\t\t\t\t\t\t\t\t\t\t//console.log('压缩后的blob路径', imgSrc);\r\n\t\t\t\t\t\t\t\t\t\t\tthis.compress(imgSrc, size).then(\r\n\t\t\t\t\t\t\t\t\t\t\tres => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, type_h5,\r\n\t\t\t\t\t\t\t\t\t\t0.9); //默认'image/png' 建议'image/jpeg' 扩展image/webp(大部分浏览器支持),其他未知\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresolve(src);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":""}